{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Asus\\\\Mobile\\\\src\\\\components\\\\Coba.js\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\n\nvar Coba = function (_Component) {\n  _inherits(Coba, _Component);\n\n  var _super = _createSuper(Coba);\n\n  function Coba() {\n    var _this;\n\n    _classCallCheck(this, Coba);\n\n    _this = _super.call(this);\n\n    _this.onRefresh = function () {\n      _this.getDataApi;\n    };\n\n    _this.componentWillMount = function () {\n      _this.getDataApi();\n    };\n\n    _this.getDataApi = function _callee() {\n      var response;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this.setState({\n                refreshing: true\n              });\n\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(fetch('https://covid19.mathdro.id/api'));\n\n            case 3:\n              response = _context.sent;\n\n              _this.setState({\n                confirmed: response.confirmed.value,\n                recovered: response.data.recovered.value,\n                deaths: response.data.deaths.value,\n                refreshing: false\n              });\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.state = {\n      confirmed: 0,\n      recovered: 0,\n      deaths: 0,\n      refreshing: false\n    };\n    return _this;\n  }\n\n  _createClass(Coba, [{\n    key: \"render\",\n    value: function render() {\n      console.log(this.state.global);\n      return React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 10\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 16\n        }\n      }, this.state.confirmed));\n    }\n  }]);\n\n  return Coba;\n}(Component);\n\n;\nexport default Coba;","map":{"version":3,"sources":["C:/Users/Asus/Mobile/src/components/Coba.js"],"names":["React","Component","Coba","onRefresh","getDataApi","componentWillMount","setState","refreshing","fetch","response","confirmed","value","recovered","data","deaths","state","console","log","global"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;;;;;IAGMC,I;;;;;AACF,kBAAa;AAAA;;AAAA;;AACX;;AADW,UA6BbC,SA7Ba,GA6BD,YAAM;AACd,YAAKC,UAAL;AACD,KA/BU;;AAAA,UAiCXC,kBAjCW,GAiCU,YAAM;AACzB,YAAKD,UAAL;AAED,KApCU;;AAAA,UAsCXA,UAtCW,GAsCE;AAAA;AAAA;AAAA;AAAA;AAAA;AACX,oBAAKE,QAAL,CAAc;AAAEC,gBAAAA,UAAU,EAAE;AAAd,eAAd;;AADW;AAAA,+CAEYC,KAAK,CAAE,gCAAF,CAFjB;;AAAA;AAELC,cAAAA,QAFK;;AAIX,oBAAKH,QAAL,CAAc;AACZI,gBAAAA,SAAS,EAAED,QAAQ,CAACC,SAAT,CAAmBC,KADlB;AAEZC,gBAAAA,SAAS,EAAEH,QAAQ,CAACI,IAAT,CAAcD,SAAd,CAAwBD,KAFvB;AAGZG,gBAAAA,MAAM,EAAEL,QAAQ,CAACI,IAAT,CAAcC,MAAd,CAAqBH,KAHjB;AAIZJ,gBAAAA,UAAU,EAAE;AAJA,eAAd;;AAJW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAtCF;;AAEX,UAAKQ,KAAL,GAAa;AACXL,MAAAA,SAAS,EAAE,CADA;AAEXE,MAAAA,SAAS,EAAE,CAFA;AAGXE,MAAAA,MAAM,EAAE,CAHG;AAIXP,MAAAA,UAAU,EAAE;AAJD,KAAb;AAFW;AAQZ;;;;6BAEQ;AACPS,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKF,KAAL,CAAWG,MAAvB;AACE,aACC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAOM,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAO,KAAKH,KAAL,CAAWL,SAAlB,CAPN,CADD;AAYF;;;;EAzBaT,S;;AAmDlB;AAED,eAAeC,IAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport {  View, Text, StyleSheet, FlatList } from 'react-native';\r\n\r\nclass Coba extends Component {\r\n    constructor(){\r\n      super();\r\n      this.state = {\r\n        confirmed: 0,\r\n        recovered: 0,\r\n        deaths: 0,\r\n        refreshing: false\r\n      }\r\n    }\r\n\r\n    render() {\r\n      console.log(this.state.global)\r\n        return(\r\n         <View>\r\n           {/* <FlatList\r\n               data={[this.state.global]}\r\n              //  keyExtractor={item => item.global.toString()}\r\n               renderItem={this.renderItem}\r\n               refreshing={this.state.refreshing}\r\n               onRefresh={this.onRefresh}/> */}\r\n               <Text>{this.state.confirmed}</Text>\r\n         </View> \r\n       )\r\n       \r\n     }\r\n    \r\n   \r\n    \r\n\r\n    onRefresh = () => {\r\n        this.getDataApi\r\n      }\r\n    \r\n      componentWillMount = () => {\r\n        this.getDataApi();\r\n        // console.log(global.confirmed);\r\n      }\r\n      \r\n      getDataApi = async () => {\r\n        this.setState({ refreshing: true })\r\n        const response = await fetch ('https://covid19.mathdro.id/api')\r\n        // const json = await response1.json()\r\n        this.setState({ \r\n          confirmed: response.confirmed.value,\r\n          recovered: response.data.recovered.value,\r\n          deaths: response.data.deaths.value,\r\n          refreshing: false});\r\n      }\r\n      \r\n\r\n};\r\n\r\nexport default Coba;"]},"metadata":{},"sourceType":"module"}